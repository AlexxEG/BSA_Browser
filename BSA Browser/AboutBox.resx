<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAADJNJREFUWEctl2lzm9d1xx/gwb7vIHYQAAHu4AKC4gZS3BdwX8RVIiWSomhql6hd
        ihRJsePYlhLbSlLbjR1l0hk1nXaa6UzcmbbT9lVf9AP0y/x6gPbFMxg8IO8995z/dpWxwcL7aMBONGAj
        GrRSG3VjMqq4bCZsJpVkjZ3+tjrymQhDrTF5p0On0+J1WauP32snFHSTb0zRVBdjtK+dvfVpegv11KfD
        ZOVJxf3YLTrqkjV4XDZsFgNOu5m6VOy9Mj9VIhx00FRrJRMxE/VbcVt1mPRaYn6jvDfT2eCrfranjUS8
        KrGghdZcEI/VQNBhoDak40zeR39HgOZMkK7GAI3pkKxlJBXSEnAZcdsNeB1yKIsRq8lAvMZByGdHmRnv
        o8bv5NG2iUebZo6mHFxf1LHcb+Ncn5eF3gCPN1388sjNhwc2Pt31cm/Nw7WVGroiDhaavbw99PH+kYUf
        Hmq5s+Lm2aad5xeCPDrv4uN9E3PFHJulIruTfcz0NzHVlSMZchIPO1E68g3EY0G2S16+um7kdM3A3VU9
        P9lT2Rh0M1UIsTHg5dm6h7+8NvLddS9Xyik+O4mxX4ozmw3IOx9/+qmN397TsD5hl8PEubk9wNJImjvr
        OS5ODnBtrcTFuVHWJnpY7W8h6LGSiLhQujtayKTjfDQXlkUsvLmqcmvZwPdPFH5xouXbeyorA1aebzr4
        430dbw88XJzK8vmJl8/2QxyXPHx708Tfv7RwNOeXDWysjsToaQ5TbE5R6mzg0vwZvns6y85UJ1uTWc5P
        NVDjs1BXG0TpP9MhYIhyshDi/VMjv3+gcn7YzMs9PceLRhoSepxmLVfntfz5sZ6TkSADrV72F5LsT4c5
        Gfbx7R0jf3pl4NaGnsMlBwdzPgoNtcQCfkotSW4sNvO3r108P4yyMVZgebQbq1mHQ4Co5JuytDalebrn
        4+s7dm4sOHhzU8PetJFM2IBRrxHQaIj7FX55oOfWrI86QXU2GWJlMMRpOcy/vdHw4aXC6ZaRV4c6RnqT
        lIpN0uIQzYkYO4M57pyr4df3ktzdiXNusk2YphWQugUDbfX4vG4uznfz5kacl/sOHuyohAXtDQmhpyBe
        ryqYDAqtSSfnhvwUBHgtuQSzPUF+vhflv/9K4eu7MrJrCg+2VXIJrxTRIW120VlfS7krxvqYmy9PY3x4
        ZeTTY5MwosIK6UAqGSURi7A1XWJvfognu0lyMRWHRUsuaSfsNwmFdGSiTvIpP90tOfoL0oVMmOkuh6A+
        wr/+SsvWlCKtVfA4FBJBGwtnC3RJd9uyIRpiZnpafLy4IkD+ws6ryxYiojv1tQGU8liJRDTChXI/T/eH
        uTjTRdRjqBZg0Ck4rRoakzYK2Ro668K0itjkMknqs37GulTOjdr4yaGBjQlFFlRQFEVGpqW3rZZCY5qU
        IL0j52eur5G7Qs0f3xj44rpKPhdloLMeZWnqLE25NLfWI9zdLjLSlSbq01cLaEjYCHnN9LcEqa1xEhLq
        NKYEhIUa5ob1TPcplPsVFka0lIcConYqfp+ThmyciM8so/CL4NjIxR0MNIWkGBN//UjLb08VUmE7Z4Ql
        ykihGb/bIRQRvs5lMBq01ZkHnFqK9S5682HyaTdRr6iZTSUq0tzV4mZpVMtkb6UADVMDRtqbYtIxjfy/
        SijgJCJjsAl7TAYNqRqzgFnBbNRwOK/h9aGGupCVIemSMtPXRTwUYK/czGgxIqc0UGqw4JW5h30mkdmK
        NAsmZDGPQ4vPYyYZFXUb0jB3VqkW8faGgdFuD3opwOt1EA55ZTMVnRzELV2Jyjo6GWdlPJmojpMlvdBQ
        I+tZhIbpqHhAgJdHITEdW3WjoEulo95JqSspLXfjtOlRtYpotw2PU+Y+aaWtXkPAXXlUxopadst6ObUO
        RaOgkacyQq182mW9tvqIeIINr7NyKIXrK4oYmQWzyYjSlArR017H9w8rZmSUUwiIjAppMaaBYpwzrT5a
        0j7M0lq/x0Z/3sDKiF2QbqxuUjml3aJwUJaNGoxopdDKxmbheeW3sGBhoDNNOuH5/8I0nG5UnDEsoxIp
        3uvL0tPRyCeXkzzctHG8YOOjBaM8FpbHc8yXS+wuFZjpFuMp6ThecbA45CDmU+V0Grrr3eKmZs4WLMyW
        DOKGetpyOoY7FfpajJSaA0yJ9k8PphgpKHQ3azmcrQiclnjEjzLbkRHvN/DZUYp/+bmVP7+y8T9/UEXZ
        algt9zE62C6A6+J4NsrLAzsPxOHWxm0yQ8kEwvkWsfFik48bK3ZeHAgjBBfnhkw82xFHHTHSnbXSLM7X
        l3PyufjMg22FvSkVi1A1KSaohIU2VpNeHK+X19sR/umVg//62sw3p0kOVjuYGe8VpOf55sgnLhmUBaxC
        WQcn8ybJC6oA2MSkYOAXxypPdzUiRmZ2xp3cWTJwQTbaHLWQFUlfLZn58EzL3zxTBITaKki7O3IoMQkj
        QUk1++NDHE618vhcgt89DPPDAw97c3kuzA3w5EI/Pz6J8up8LXODGT6cavjHFypvjw3c39Ly0ZKOtRE5
        +bjCWJ9LLNjAazGz1VG94EXLXEnh/qbKVyc6vrwhRcnf1Qn2hvvbUboaRTQkkFxdLLM+VOLJRor/eGPh
        tbBibrCTp4dl3t3d5XShxNFMt7wrclL2CPq1wm8dtWE9BjGs5qzCzIAigHPx7LxWCtCKK2qlI1oG2zVk
        YzaWB61izxYRMB1piWfd7aKE/S0ZQaqLKytTXN+Y5fZGD79/GJWqW9maGOY3Dwb55vE+L3YXuTw7waWZ
        CUYLSWm9jXSNS/AjAiWUqtjrYJeenkKce5tanuxopDvSFZHooU4pIG6hL28RL3GJmUkEzIqXDPeiNEoo
        cNls7EwPcnNjhuO1ee7uTXFbZPlopcTToyUOV8u8OJzipxeGOFkcZaTYQDLsEOGqq6K5wmmDXgKsCNRY
        f5C1UZX72xpOJFmtjCmU2rUiVFpmB1SGCjZ68iLpEnJvHW2hZOMeWcDO5nCJa6szIsdD7K2UubTUz6c3
        +vjZ7TkubyxwSX57c5Bje7SX2cE2keiU5Dq7yK0OVa1IsBa3Q8/ZLjNb43pur6vc3tSLT+iqQrUmhVTw
        sCojme4Vn0nXMFoqoOSSLvxygt6GBrbGBiWxjHC8PM139yOSYrJcu7TA8swk60urQr9e0e8MiwMtYt19
        Al4zZrNa1XtVqxFk60hF9ezP6kVHXNIBL/NiWuWShmk5/dJZvYxEZbJHYr+k5DOdjShuu8RkoUSpOSdp
        dowXFxfZmyzx/b0Uvz7Nc//yDAtTE5xf25DWNZEUHw+LKzZn/HJ6WUiChcNuwiMeYZR1agIymi4r+3Mp
        NqdkHLLh0rAi9uumPCgALDkZP2PAbtXT2ZZFiUg4rLjYlakQt8+18qurBV5f7BIUZ/m7n9Xyl6+GuXNp
        mr5iK0PFFlrTEdrrakRIRAnFaMJ+yQqt9bQLmCMCynDQI/4hWXE5yM0tK7PDHsbO6CRBBSgI72eGjIxJ
        BypO2dFah+JxGPHYVe4ux3l+Kcn9jQxfHnfz75+5+M+vffz4tpnPb/dTbK2lWA2aThKyUYW6GUk0Pqee
        2riX+pRcSuqTZCRhtUpcWx5JsD7XysK4q5qWRot6GusDLA6LKI39X86s2LZitxqrpvF4PcWXV1z8IG1/
        vNXG440QH1/p5MPzBP/wOip5P0epQ247bgMhp0lYIB4g7XbJLSoTk7iWDTI9doZiewujvU3cP+9hfynE
        Tlm60G+mMWFgos9CqWAV0dIJbVXamiSQhKojEDebdPNmz8gf7rh4f8vNi/Nu3n1Uw7vLAT49auahXDbu
        btdxZdLGx6s2bszbmS+FmegOCTh9XF1v5ereLNsLExJAW7mxGuaO3CVWJySi51yk/WYKkgV6G43MCyAr
        oSddG0Yxm41Vr9+ViP3Jtl3aL9epizHpQIAHq042z4bZHavj2myS06Ugt8bi/HDg458/CfFEEvGLo07e
        PWzhi2t+Hh00c7o3xHm5fFyaiUjKMku7BWw5KylJVPUhC81ph2QNazXuB/xixz63WWxVR43HKeDxkK8P
        USfeXWgKC89F7RJBcrWS77OpatqtizrI1wqiSzl6O1IyBpvEb7mERi1ywzbTEJfvwpKwX5KRZIGASyuU
        01SxolcloglTKlmhAmK/KLDictrfVWhUuaUEBVj5plpJPRYaszGa6hPyPSVX7UYu7yww0l+gozlDMZ+l
        syVFNOSRAlxy5TZXdcBu1kuLI5IhI9VrWeXK75RrebCSfmTjhFxGQzKKgMckXmKSAlzv/hcI4kmd8REw
        OAAAAABJRU5ErkJggg==
</value>
  </data>
</root>